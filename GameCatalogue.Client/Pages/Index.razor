@page "/"
@using Models
@inject NavigationManager NavigationManager



<PageTitle>Game Catalogue</PageTitle>

<div class="row mb-4">
	<div class="col-sm-6">
		<button type ="button" class="btn btn-primary" @onclick="CreateGame">Create New Game</button>
	</div>
</div>

<h1>Game Catalogue</h1>
@if (games is null)
{
	<p><em>Loading...</em></p>
}
else
{
	<table class="table table-striped table-bordered table-hover">
		<thead class="table-dark">
			<th>Id</th>
			<th>Name</th>
			<th>Genre</th>
			<th>Price</th>
			<th>Release Date</th>
			<th></th>
		</thead>
		<tbody>
			<!-- C# section-->
			@foreach (var game in games)
			{
				<tr>
					<td>@game.Id</td><!-- @game is a C# variable exposed by at sign-->	
					<td>@game.GameName</td>
					<td>@game.Genre</td>
					<td>$@game.Price</td>
					<td>@game.ReleaseDate.ToString("MM/dd/yyyy")</td> 	
					<td>
						<button class="btn btn-primary"  @onclick="(() => EditGame(game.Id))">  <!-- I cant believe how gross Lamba syntax is inside of a string-->
							<i class="oi oi-pencil"></i>  	<!-- from css/open-iconinic folder : https://icon-sets.iconify.design/oi/-->
						</button>
					</td>	
				</tr>
			}
		</tbody>
	</table>
}

<!-- Code section for C# If formatting is fucking up from IDE, set "editor.formatOnSave": false, in settings.json-->
@code
{
	private Game[]? games; //Nullable array on construction

    protected override void OnInitialized()
    {
      games = GameClient.GetGames();
    }

	 private void CreateGame()
	 {
		NavigationManager.NavigateTo("/game"); //defined at top of EditGame.razor @page
	 }

	 private void EditGame(int gameID)
	 {
		NavigationManager.NavigateTo($"/game/{gameID}"); //defined at top of EditGame.razor @page
	 }

}



