
@using Models
@inject NavigationManager NavigationManager

<!-- Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="deleteModalLabel">@pageTitle</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-danger" data-bs-dismiss="modal" @onclick="@OnConfirm">
				Delete
			</button>
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" @onclick="@OnCancel">
				Cancel
			</button>
      </div>
    </div>
  </div>
</div>

@code {
	[Parameter]
	public Game? Game {get; set;}

	[Parameter]
	public EventCallback<bool> OnClose {get; set;}

	private string pageTitle = string.Empty;

    protected override void OnParametersSet()
    {
		this.pageTitle = $"Delete {Game?.GameName}";
    }

	private void OnConfirm()
	{
		OnClose.InvokeAsync(true);
	}	

	private void OnCancel()
	{
		OnClose.InvokeAsync(false);
	}	
}



